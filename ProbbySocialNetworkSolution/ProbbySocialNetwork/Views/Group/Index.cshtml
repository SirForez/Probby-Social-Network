@model ProbbySocialNetwork.Models.ViewModels.GroupViewModel

@{
    ViewBag.Title = "Group";
}

<div class="container">
    <div class="lhsNav">
        <h2>@Model.currentGroup.Name</h2>
        <p>@Model.currentGroup.Description</p>
        @if (Model.currentGroupMembers.Contains(Model.currentUser))
        {
            @Html.ActionLink("Leave Group", "LeaveGroup", "Group", new { id = Model.currentGroup.ID }, new { @class = "leaveGroupButton" })
        }
        else if (Model.currentGroupAdmins.Contains(Model.currentUser))
        {
            @Html.ActionLink("Delete Group", "DeleteGroup", "Group", new { id = Model.currentGroup.ID }, new { @class = "deleteGroupButton" })
        }
        else
        {
            @Html.ActionLink("Join Group", "JoinGroup", "Group", new { id = Model.currentGroup.ID }, new { @class = "joinGroupButton" })
        }
        
        <div class="usersInGroup">
            <div class="adminsInGroup">
                <h2>Admins of group : </h2>
                <div class="adminsInGroup-list">
                    <ul>
                        @foreach (ApplicationUser a in Model.currentGroupAdmins)
                        {
                            <li>
                                <a href="/Home/Profile?username=@a.UserName">@a.UserName</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="peopleInGroup">
                <h2>People in group : </h2>
                <div class="peopleInGroup-list">
                    <ul>
                        @foreach (ApplicationUser a in Model.currentGroupMembers)
                        {
                            <li>
                                <a href="/Home/Profile?username=@a.UserName">@a.UserName</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        @if (Model.currentGroupAdmins.Contains(Model.currentUser))
        {
            <div class="admin-panel">
                <div class="edit-group">
                    @using (Html.BeginForm("EditGroup", "Group", FormMethod.Post, new { id = "groupEditForm" }))
                    {
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editGroup" data-whatever="">Edit the group</button>
                        <div class="modal fade" id="editGroup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="exampleModalLabel">Edit the group</h4>
                                    </div>
                                    <div class="modal-body">
                                        <form>
                                            <input type="hidden" name="groupID" class="groupID" id="groupID" value="@Model.currentGroup.ID" />
                                            <div class="form-group">
                                                <label for="groupName" class="control-label">Name of group</label>
                                                <input type="text" name="groupName" class="form-control" id="groupName" value="@Model.currentGroup.Name">
                                            </div>
                                            <div class="form-group">
                                                <select name="groupHobby">
                                                    @foreach (Hobby h in Model.availableHobbies)
                                                    {
                                                        if (@h.Name == "Misc")
                                                        {
                                                            <option value="@h.Name" selected="selected">#@h.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@h.Name">#@h.Name</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <label for="description" class="control-label">Description</label>
                                                <textarea class="form-control" name="groupDesc" id="description" value="@Model.currentGroup.Description"></textarea>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-primary">Edit the group</button>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                </div>
                <div class="manage-users">
                    @using (Html.BeginForm("AssignAdmin", "Group", FormMethod.Post, new { id = "assignGroupAdminForm" }))
                    {
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#assignAdmin" data-whatever="">Assign admin privileges</button>
                        <div class="modal fade" id="assignAdmin" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="exampleModalLabel">Assign admin privileges</h4>
                                    </div>
                                    <div class="modal-body">
                                        <form>
                                            <input type="hidden" name="groupID" class="groupID" id="groupID" value="@Model.currentGroup.ID" />
                                            <div class="form-group">
                                                <select name="userName">
                                                    @foreach (ApplicationUser a in Model.currentGroupMembers)
                                                    {
                                                        <option value="@a.UserName">@a.UserName</option>
                                                    }
                                                </select>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-primary">Assign</button>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                    @using (Html.BeginForm("RemoveAdmin", "Group", FormMethod.Post, new { id = "removeGroupAdminForm" }))
                    {
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#removeAdmin" data-whatever="">Remove admin privileges</button>
                        <div class="modal fade" id="removeAdmin" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="exampleModalLabel">Remove admin privileges</h4>
                                    </div>
                                    <div class="modal-body">
                                        <form>
                                            <input type="hidden" name="groupID" class="groupID" id="groupID" value="@Model.currentGroup.ID" />
                                            <div class="form-group">
                                                <select name="userName">
                                                    @foreach (ApplicationUser a in Model.currentGroupAdmins)
                                                    {
                                                        <option value="@a.UserName">@a.UserName</option>
                                                    }
                                                </select>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-primary">Remove admin privileges</button>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                    @using (Html.BeginForm("RemoveUser", "Group", FormMethod.Post, new { id = "removeUserFromGroupForm" }))
                    {
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#removeUser" data-whatever="">Remove user</button>
                        <div class="modal fade" id="removeUser" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="exampleModalLabel">Remove user from group members</h4>
                                    </div>
                                    <div class="modal-body">
                                        <form>
                                            <input type="hidden" name="groupID" class="groupID" id="groupID" value="@Model.currentGroup.ID" />
                                            <div class="form-group">
                                                <select name="userName">
                                                    @foreach (ApplicationUser a in Model.currentGroupMembers)
                                                    {
                                                        <option value="@a.UserName">@a.UserName</option>
                                                    }
                                                </select>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-primary">Remove</button>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                </div>
            </div>
        }

    </div>
    <div class="theContent">
        <section>
            @using (Html.BeginForm("CreateStatus", "Status", FormMethod.Post, new { id = "statusForm", groupID = Model.currentGroup.ID }))
            {
                <input type="hidden" name="userid" value="@Model.currentUser.Id " />
                <input type="hidden" name="groupID" value="@Model.currentGroup.ID" />
                foreach (Hobby h in Model.currentGroupHobbies)
                {
                    <span class="hobby-check"><input type="checkbox" name="@h.Name" class="hobbyCheckboxes" value="@h.Name" />@h.Name</span>
                }
                <div class="form-horizontal">
                    <label class="sr-only" for="statusText">Status</label>
                    <textarea class="form-control" rows="4" id="statusText" name="statusText" placeholder="Insert a status..."></textarea>
                    <span class="appendTo"></span>
                    <button type="submit" class="btn btn-primary">Post</button>
                </div>

                @Html.ValidationSummary(false)
            }
            <button class="onClick">Upload image</button>
        </section>

        @using ProbbySocialNetwork.Models
        <section id="statusList">
            @foreach (Status s in Model.currentGroupStatusHistory)
            {
                <div class="status">
                    <div class="lhsStatus">
                        <div class="karmaContent">
                            @using (Html.BeginForm("UpvoteStatus", "Status", FormMethod.Post, new { id = s.ID }))
                            {
                                <input type="hidden" name="statusId" value="@s.ID" />
                                <button type="submit" class="glyphicon glyphicon-chevron-up upvote arrow"></button>
                            }

                            @if (s.Karma >= 0)
                            {
                                <p class="karmaCount">@s.Karma</p>
                            }
                            else
                            {
                                <p class="karmaCount">0</p>
                            }

                            @using (Html.BeginForm("DownvoteStatus", "Status", FormMethod.Post, new { id = s.ID }))
                            {
                                <input type="hidden" name="statusId" value="@s.ID" />
                                <button type="submit" class="glyphicon glyphicon-chevron-down downvote arrow"></button>
                            }
                        </div>
                        <div class="lhsContent">
                            <p>
                                <img src="@s.ProfilePic" class="postPic" />
                            </p>
                            <p class="postUserName"><a href="/Home/Profile?username=@s.UserName">@s.UserName</a></p>

                            @{ //404 ERROR: no better way to do this found.
                            ServiceSingleton serviceManager = ServiceSingleton.GetInstance;
                            HobbyService service = ServiceSingleton.GetHobbyService;
                            List<Hobby> statusHobbies = service.getHobbiesByStatus(s);


                            foreach (Hobby h in statusHobbies)
                            {
                                @Html.ActionLink("#" + h.Name + " ", "Index", "Hobby", routeValues: h, htmlAttributes: new { id = h.ID });
                            }
                            }
                        </div>

                    </div>
                    <div class="rhsStatus">
                        <div class="statusContent">
                            <h3 id="@("statusText"+s.ID)" class="statusContent2">@s.Post</h3>
                            @using (Html.BeginForm("EditStatus", "Status", FormMethod.Post, new { id = s.ID }))
                            {
                                <input type="hidden" name="statusId" value="@s.ID" />
                                <div id="@("statusTextForm"+s.ID)" class="editForm">
                                    <input type="text" name="@("statusTextbox"+s.ID)" value="@s.Post" />
                                    @if (s.MediaURL != null)
                                    {
                                        <input type="text" name="@("picTextbox"+s.ID)" value="@s.MediaURL" />
                                    }
                                    <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                    <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                </div>
                            }
                            @if (s.MediaURL != null)
                            {
                                <img src="@s.MediaURL" alt="image" class="statusContent2" id="@("statusPic"+s.ID)" />
                            }
                        </div>
                        <p>
                            @s.Date
                            @if (Model.currentUser.Id == s.UserID || Model.currentGroupAdmins.Contains(Model.currentUser))
                            {
                                <span> | </span>
                                <a href="#" class="editLink" onclick="editStatus(@s.ID)">Edit</a>
                                <span> | </span>
                                @Html.ActionLink("Remove", "RemoveStatus", "Status", new { id = s.ID }, null)
                            }
                            
                            <span> | </span>
                            @Html.ActionLink("Save", "AddStatusToSavedFeed", "Home", new { id = s.ID }, null)
                        </p>
                        @if (Model.commentsForStatuses != null)
                        {
                            <div class="allComments" id='@("commentForStatus" + s.ID)'>
                                @foreach (Comment c in Model.commentsForStatuses)
                                {
                                    if (c.StatusID == s.ID)
                                    {
                                        <div class="comment">
                                            <h5 id='@("commenttext"+c.ID)' class="commentContent2">@c.Body</h5>
                                            @using (Html.BeginForm("EditComment", "Status", FormMethod.Post, new { id = c.ID }))
                                            {
                                                <input type="hidden" name="commentId" value="@c.ID" />
                                                <div id='@(" commenttextform"+c.ID)' class="editForm">
                                                    <label for='@(" commenttextbox"+c.ID)'>Comment:</label>
                                                    <br />
                                                    <input type="text" name='@(" commenttextbox"+c.ID)' value="@c.Body" />
                                                    <br />
                                                    <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                                    <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                                </div>
                                            }
                                            <a href="/Home/Profile?username=@c.UserName">@c.UserName</a> | @c.DateInserted
                                            @if (Model.currentUser.Id == c.UserID)
                                            {
                                                <span> | </span>
                                                <a class="editLink" onclick="editComment(@c.ID)">Edit</a>
                                                <span> | </span>
                                                @Html.ActionLink("Remove", "RemoveComment", "Status", new { id = c.ID }, null)
                                            }
                                        </div>
                                    }
                                }
                            </div>
                        }

                        @using (Html.BeginForm("CreateComment", "Status", FormMethod.Post, new { id = "commentForm" }))
                        {
                            <input type="hidden" name="statusID" value="@s.ID" />
                            <div class="form-horizontal">
                                <label class="sr-only" for="commentText">Status</label>
                                <input type="text" class="form-control" name="commentText" placeholder="Write a comment..." />
                            </div>
                            
                            @Html.ValidationSummary(false)
                        }
                    </div>

                </div>
            }
        </section>

    </div>
</div>