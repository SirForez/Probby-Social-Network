@model ProbbySocialNetwork.Models.ViewModels.GroupViewModel

@{
    ViewBag.Title = "Group";
}

<div class="container">
    <div class="lhsNav">
        <h2>@Model.currentGroup.name</h2>
        <p>@Model.currentGroup.description</p>
        @if (Model.currentGroupMembers.Contains(Model.currentUser))
        {
            @Html.ActionLink("Leave Group", "LeaveGroup", "Group", new { id = Model.currentGroup.ID }, new { @class = "leaveGroupButton" })
        }
        else
        {
            @Html.ActionLink("Join Group", "JoinGroup", "Group", new { id = Model.currentGroup.ID }, new { @class = "joinGroupButton" })
        }
        
    <div class="inGroup">
        <h2>Admins of group : </h2>
        <div class="adminInGroup-list">
            <ul>
                @foreach (ApplicationUser a in Model.currentGroupAdmins)
                {
                    <li>
                        <a href="/Home/Profile?username=@a.UserName">@a.UserName</a>
                    </li>
                }
            </ul>
        </div>
        <h2>People in group : </h2>
        <div class="peopleInGroup-list">
            <ul>
                @foreach (ApplicationUser a in Model.currentGroupMembers)
                {
                    <li>
                        <a href="/Home/Profile?username=@a.UserName">@a.UserName</a>
                    </li>
                }
            </ul>
        </div>
    </div>

    </div>
    <div class="theContent">
        <!--breyta i html helper-->
        <section>
            @using (Html.BeginForm("CreateStatus", "Status", FormMethod.Post, new { id = "statusForm", groupID = Model.currentGroup.ID }))
            {
                <input type="hidden" name="userid" value="@Model.currentUser.Id " />
                <input type="hidden" name="groupID" value="@Model.currentGroup.ID" />
                <input type="hidden" name="postedToID" value="" />
                <input type="hidden" name="chosenHobby" id="chosenHobby" value="@Model.currentGroup.hobby"/>
                <label>#@Model.currentGroup.hobby.Name</label>
                <div class="form-horizontal">
                    <label class="sr-only" for="statusText">Status</label>
                    <textarea class="form-control" rows="4" id="statusText" name="statusText" placeholder="Insert a status..."></textarea>
                    <span class="appendTo"></span>
                    <button type="submit" class="btn btn-primary">Post</button>
                </div>

                @Html.ValidationSummary(false)
            }
            <button class="onClick">Upload image</button>
        </section>

        @using ProbbySocialNetwork.Models
        <section id="statusList">
            @foreach (Status s in Model.currentGroupStatusHistory)
            {
                <div class="status">
                    <div class="lhsStatus">
                        <p>
                            <img src="@s.ProfilePic" class="postPic" />
                        <p class="postUserName"><a href="/Home/Profile?username=@s.UserName">@s.UserName</a></p>
                        @{
                ServiceSingleton serviceManager = ServiceSingleton.GetInstance;
                HobbyService service = ServiceSingleton.GetHobbyService;
                Hobby statusHobby = service.getHobbyByID(s.HobbyID);
                if (statusHobby != null)
                {
                    <p>#@statusHobby.Name</p>
                }
                        }
                    </div>
                    <span class="rhsStatus">
                        <div class="statusContent">
                            <!--Status content and edit form for status-->
                            <h3 id="@("statusText"+s.ID)" class="statusContent2">@s.Post</h3>
                            @using (Html.BeginForm("EditStatus", "Status", FormMethod.Post, new { id = s.ID }))
                            {
                                <input type="hidden" name="statusId" value="@s.ID" />
                                <div id="@("statusTextForm"+s.ID)" class="editForm">
                                    @*need id for textarea to get into controller*@
                                    <input type="text" name="@("statusTextbox"+s.ID)" value="@s.Post" />
                                    @if (s.MediaURL != null)
                                    {
                                        <input type="text" name="@("picTextbox"+s.ID)" value="@s.MediaURL" />
                                    }
                                    <button type="submit" class="btn btn-primary">Confirm Edit</button>
                                </div>
                            }

                            <!--img status and edit form for img url-->
                            @if (s.MediaURL != null)
                            {
                                <img src="@s.MediaURL" alt="image" class="statusContent2" id="@("statusPic"+s.ID)" />
                            }
                        </div>
                        <!--edit and remove links-->
                        <p>
                            @s.Date
                            @if (Model.currentUser.Id == s.UserID)
                            {
                                    <!--onclick it will hide status content and show edit form-->
                                <a href="#" class="editLink" onclick="editStatus(@s.ID)">Edit</a>
                                <span> | </span>
                                @Html.ActionLink("Remove", "RemoveStatus", "Status", new { id = s.ID }, null)
                            }
                        </p>
                        @if (Model.commentsForStatuses != null)
                        {
                            foreach (Comment c in Model.commentsForStatuses)
                            {
                                if (c.StatusID == s.ID)
                                {
                                    <p class="comment">
                                        <a href="/Home/Profile?username=@c.UserName">@c.UserName</a> | @c.Body | @c.DateInserted
                                        <span> | </span>
                                        @if (Model.currentUser.Id == s.UserID)
                                        {
                                            @Html.ActionLink("Remove", "RemoveComment", "Status", new { id = c.ID }, null)
                                        }
                                    </p>
                                }
                            }
                        }

                        @using (Html.BeginForm("CreateComment", "Status", FormMethod.Post, new { id = "commentForm" }))
                        {
                            <input type="hidden" name="statusID" value="@s.ID" />
                            <div class="form-horizontal">
                                <label class="sr-only" for="commentText">Status</label>
                                <input type="text" class="form-control" name="commentText" placeholder="Write a comment..." />
                            </div>
                            <input type="hidden" name="returnUrl" value="" />
                            @Html.ValidationSummary(false)
                        }
                    </span>

                </div>
            }
        </section>

    </div>
</div>