@model ProbbySocialNetwork.Models.ViewModels.FeedViewModel

@{
    //ViewBag.Title = "Home Page";
}

<div class="newsfeed">
    <div class="container">
        <div class="lhsNav">
            <img src="@Model.currentUser.ProfilePic" class="profilePic">
            <p>@Model.currentUser.UserName</p>

            <div class="group">
                <h2>Your groups</h2>
                <ul>
                    @foreach (Group g in Model.currentUserGroups)
                    {
                        <li>
                            @Html.ActionLink(g.Name, "Index", "Group", routeValues: g, htmlAttributes: new { id = g.ID })
                        </li>
                    }
                </ul>
                <section>
                    @using (Html.BeginForm("CreateGroup", "Group", FormMethod.Post, new { id = "groupForm", onsubmit="return validateGroup(this);" }))
                    {
                        <div class="groupCreation">
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createGroup" data-whatever="">Create a new group</button>
                            <div class="modal fade" id="createGroup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            <h4 class="modal-title" id="exampleModalLabel">Create a new group</h4>
                                        </div>
                                        <div class="modal-body">
                                            <form>
                                                <div class="form-group">
                                                    <label for="groupName" class="control-label">Name of group</label>
                                                    <input type="text" name="groupName" class="form-control" id="groupName">
                                                </div>
                                                <div class="form-group">
                                                        @foreach (Hobby h in Model.currentUserHobbies)
                                                        {
                                                                <input type="checkbox" name="@h.Name" value="@h.Name" />@h.Name<br/>
                                                        }
                                                </div>
                                                <div class="form-group">
                                                    <label for="description" class="control-label">Description</label>
                                                    <textarea class="form-control" name="groupDesc" id="description"></textarea>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary">Create a new group</button>
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                </section>
            </div>
            <div class="hobby">
                <h2>Hobbies</h2>
                <ul>
                    @using ProbbySocialNetwork.Models;
                    @foreach (Hobby h in Model.currentUserHobbies)
                    {
                        <li>
                            @Html.ActionLink("#" + h.Name, "Index", "Hobby", routeValues: h, htmlAttributes: new { id = h.ID })
                        </li>
                    }
                </ul>
                <section>
                    @using (Html.BeginForm("CreateHobby", "Hobby", FormMethod.Post, new { id = "hobbyForm", onsubmit = "return validateHobby(this);" }))
                    {
                        <div class="hobbyCreation">
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createHobby" data-whatever="">Create a new hobby</button>
                            <div class="modal fade" id="createHobby" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            <h4 class="modal-title" id="exampleModalLabel">Create hobby</h4>
                                        </div>
                                        <div class="modal-body">
                                            <form>
                                                <div class="form-group">
                                                    <label for="hobbyName" class="control-label">Hobby name</label>
                                                    <input type="text" class="form-control" name="hobbyName" id="hobbyName">
                                                </div>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary">Create hobby</button>
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(false)
                    }
                </section>
            </div>
        </div>
        <div class="theContent">
            <!--breyta i html helper-->

            <section>
                @using (Html.BeginForm("CreateStatus", "Status", FormMethod.Post, new { id = "statusForm" }))
                {
                    <input type="hidden" name="userid" value="@Model.currentUser.Id " />
                    foreach (Hobby h in Model.currentUserHobbies)
                    {
                        <input type="checkbox" name="@h.Name" class="hobbyCheckboxes" value="@h.Name" />@h.Name<br />
                    }
                    <div class="form-horizontal">
                        <label class="sr-only" for="statusText">Status</label>
                        <textarea class="form-control" rows="4" id="statusText" name="statusText" placeholder="Insert a status..."></textarea>
                        <span class="appendTo"></span>
                        <button type="submit" class="btn btn-primary" onclick="return validateHobbiesForStatuses()">Post</button>
                    </div>

                    @Html.ValidationSummary(false)
                }
                <button class="onClick">Upload image</button>
            </section>

            @using ProbbySocialNetwork.Models
            <section id="statusList">
                @foreach (Status s in Model.newestStatuses)
                {
                    <div class="status" >
                        <div class="lhsStatus">
                            <p>
                                <img src="@s.ProfilePic" class="postPic" />
                            </p>
                            <p class="postUserName"><a href="/Home/Profile?username=@s.UserName">@s.UserName</a></p>

                                @{
                                    //Put this in the viewmodel!!!

                                    ServiceSingleton serviceManager = ServiceSingleton.GetInstance;
                                    HobbyService service = ServiceSingleton.GetHobbyService;
                                    List<Hobby> statusHobbies = service.getHobbiesByStatus(s);


                                    foreach (Hobby h in statusHobbies)
                                    {
                                        @Html.ActionLink("#" + h.Name + " ", "Index", "Hobby", routeValues: h, htmlAttributes: new { id = h.ID });
                                    }
                                    
                                    <br />
                                    //Html.ActionLink("Upvote", "UpvoteStatus", "Status", new { id = s.ID }, null)
                                    //Html.ActionLink("Upvote", "UpvoteStatus", "Status", routeValues: s, htmlAttributes: null)
                                    using (Html.BeginForm("UpvoteStatus", "Status", FormMethod.Post, new { id = s.ID }))
                                    {
                                        <input type="hidden" name="statusId" value="@s.ID"/>
                                        <button type="submit" class="btn btn-primary" >Up</button>
                                    }

                                    <p>@s.Karma</p>

                                    //Html.ActionLink("Downvote", "DownvoteStatus", "Status", new { id = s.ID }, null)
                                    //Html.ActionLink("Downvote", "DownvoteStatus", "Status", routeValues: s, htmlAttributes: null)
                                    using (Html.BeginForm("DownvoteStatus", "Status", FormMethod.Post, new { id = s.ID }))
                                    {
                                        <input type="hidden" name="statusId" value="@s.ID" />
                                        <button type="submit" class="btn btn-primary">Down</button>
                                    }
}

                        </div>
                        <span class="rhsStatus">
                            <div class="allStatus">
                                <div class="statusContent">
                                    <!--Status content and edit form for status-->

                                    @if (s.PostedToID != "" && s.PostedToID != null && s.PostedToID != s.UserID)
                                    {
                                        AccountService accountService = ServiceSingleton.GetAccountService;
                                        ApplicationUser postedToUser = accountService.getUserByID(s.PostedToID);
                                        <p>Posted to <a href="/Home/Profile?username=@postedToUser.UserName">@postedToUser.UserName</a>'s profile</p>
                                    }

                                    <h3 id="@("statusText"+s.ID)" class="statusContent2">@s.Post</h3>
                                    @using (Html.BeginForm("EditStatus", "Status", FormMethod.Post, new { id = s.ID }))
                                    {
                                        <input type="hidden" name="statusId" value="@s.ID" />
                                        <div id="@("statusTextForm"+s.ID)" class="editForm">
                                            @*need id for textarea to get into controller*@
                                            <label for="@("statusTextbox"+s.ID)">Status:</label>
                                            <input type="text" name="@("statusTextbox"+s.ID)" value="@s.Post" />
                                            <br />
                                            @if (s.MediaURL != null)
                                            {
                                                <label for="@("picTextbox"+s.ID)">Picture:</label>
                                                <input type="text" name="@("picTextbox"+s.ID)" value="@s.MediaURL" />
                                                <br />
                                            }
                                            <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                            <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                        </div>
                                    }

                                    <!--img status and edit form for img url-->
                                    @if (s.MediaURL != null)
                                    {
                                        <img src="@s.MediaURL" alt="image" class="statusContent2" id="@("statusPic"+s.ID)" />
                                    }
                                </div>
                                <!--edit and remove links-->
                                <p>

                                    @s.Date
                                    @if (Model.currentUser.Id == s.UserID)
                                    {
                                    <!--onclick it will hide status content and show edit form-->
                                        <span> | </span>
                                        <a class="editLink" onclick="editStatus(@s.ID)">Edit</a>
                                        <span> | </span>
                                        @Html.ActionLink("Remove", "RemoveStatus", "Status", new { id = s.ID }, null)
                                    }
                                </p>
                            </div>
                            @*
                            @if (Model.commentsForStatuses != null)
                            {
                                <div class="allComments" id='@("commentForStatus" + s.ID)'>
                                    @foreach (Comment c in Model.commentsForStatuses)
                                    {
                                        if (c.StatusID == s.ID)
                                        {
                                            <div class="comment">
                                                <h5 id='@("commenttext"+c.ID)' class="commentContent2">@c.Body</h5>
                                                @using (Html.BeginForm("EditComment", "Status", FormMethod.Post, new { id = c.ID }))
                                                {
                                                    <input type="hidden" name="commentId" value="@c.ID" />
                                                    <div id='@(" commenttextform"+c.ID)' class="editForm">
                                                        <!--need id for textarea to get into controller-->
                                                        <label for='@(" commenttextbox"+c.ID)'>Comment:</label>
                                                        <br />
                                                        <input type="text" name='@(" commenttextbox"+c.ID)' value="@c.Body" />
                                                        <br />
                                                        <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                                        <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                                    </div>
                                                }
                                                <a href="/Home/Profile?username=@c.UserName">@c.UserName</a> | @c.DateInserted
                                                @if (Model.currentUser.Id == c.UserID)
                                                {
                                                    <span> | </span>
                                                    <a class="editLink" onclick="editComment(@c.ID)">Edit</a>
                                                    <span> | </span>
                                                    @Html.ActionLink("Remove", "RemoveComment", "Status", new { id = c.ID }, null)
                                                }
                                            </div>
                                        }
                                    }
                                </div>
                            }

                            @using (Html.BeginForm("CreateComment", "Status", FormMethod.Post, new { id = "commentForm" }))
                            {
                                <input type="hidden" name="statusID" id="statusID" value="@s.ID" />
                                <div class="form-horizontal">
                                    <label class="sr-only" for="commentText">Status</label>
                                    <input type="text" class="form-control commentTextbox" id="commentInputBox" name="commentText" placeholder="Write a comment..." />
                                </div>
                                @Html.ValidationSummary(false)
                            }
                            *@
                            @if (Model.commentsForStatuses != null)
                            {
                                <div class="allComments" id='@("commentforstatus"+s.ID)'>
                                    @foreach (Comment c in Model.commentsForStatuses)
                                    {
                                        if (c.StatusID == s.ID)
                                        {
                                            <div class="comment">
                                                <h5 id='@(" commenttext"+c.ID)' class="commentContent2">@c.Body</h5>
                                                @using (Html.BeginForm("EditComment", "Status", FormMethod.Post, new { id = c.ID }))
                                                {
                                                    <input type="hidden" name="commentId" value="@c.ID" />
                                                    <div id='@(" commenttextform"+c.ID)' class="editForm">
                                                        @*need id for textarea to get into controller*@
                                                        <label for='@(" commenttextbox"+c.ID)'>Comment:</label>
                                                        <br />
                                                        <input type="text" name='@(" commenttextbox"+c.ID)' value="@c.Body" />
                                                        <br />
                                                        <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                                        <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                                    </div>
                                                }
                                                <a href="/Home/Profile?username=@c.UserName">@c.UserName</a> | @c.DateInserted
                                                @if (Model.currentUser.Id == c.UserID || Model.currentUser.Id == s.UserID)
                                                {
                                                    <span> | </span>
                                                    <a class="editLink" onclick="editComment(@c.ID)">Edit</a>
                                                    <span> | </span>
                                                    @Html.ActionLink("Remove", "RemoveComment", "Status", new { id = c.ID }, null)
                                                }
                                            </div>
                                        }
                                    }
                                </div>
                            }
                            @using (Html.BeginForm("CreateComment", "Status", FormMethod.Post, new { id = "commentForm" }))
                            {
                                <input type="hidden" name="statusID" value="@s.ID" />
                                <div class="form-horizontal">
                                    <label class="sr-only" for="commentText">Status</label>
                                    <input type="text" class="form-control commentTextbox" id="commentInputBox" name="commentText" placeholder="Write a comment..." />
                                </div>
                                @Html.ValidationSummary(false)
                            }
                        </span>
                    </div>
                }
            </section>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}