@model ProbbySocialNetwork.Models.ViewModels.ProfileViewModel

@{
    ViewBag.Title = "Profile";
}

<div class="container nw">
    <div class="lhsNav">
    <img src="@Model.profileOwner.ProfilePic" class="profilePic">
        @if (Model.currentUser.Id == Model.profileOwner.Id)
        {
            <button class="changeProfilePic">Change profile picture</button>
            <div id="hideChangePic">
                @using (Html.BeginForm("EditProfilePic", "Home", FormMethod.Post, new { id = "profilePictureForm" }))
                {
                    <div class="form-horizontal">
                        <label class="sr-only" for="picLink">New Picture</label>
                        <input type="text" id="newProfilePic" name="picLink" placeholder="Link to profile picture..." />
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                    @Html.ValidationSummary(false)
                }
            </div>
        }
        <h4>@Model.profileOwner.UserName's Profile</h4>
        <p> @Model.profileOwner.UserName's Total Karma: @Model.profileOwner.Karma</p>
        @if (Model.profileOwner.UserName != Model.currentUser.UserName)
        {
            if (Model.profileOwnerFollowers.Contains(Model.currentUser))
            {
                @Html.ActionLink("Unfollow", "RemoveFollowing", "Account", new { username = Model.profileOwner.UserName }, new { @class = "unfollowButton" })
            }
            else
            {
                @Html.ActionLink("Follow", "AddFollowing", "Account", new { username = Model.profileOwner.UserName }, new { @class = "followButton" })
            }
        }
        <div class="follow">
            <h2>Following list : @Model.profileOwnerFollowing.Count</h2>
            <div class="follow-list">
                <ul>
                    @foreach (ApplicationUser a in Model.profileOwnerFollowing)
                    {
                        <li>
                            <a href="/Home/Profile?username=@a.UserName">@a.UserName</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="follow">
            <h2>Follower list : @Model.profileOwnerFollowers.Count</h2>
            <div class="follow-list">
                <ul>
                    @foreach (ApplicationUser a in Model.profileOwnerFollowers)
                    {
                        <li>
                            <a href="/Home/Profile?username=@a.UserName">@a.UserName</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        
    </div>
    <div class="theContent">
        <section>
            @using (Html.BeginForm("CreateStatus", "Status", FormMethod.Post, new { id = "statusForm" }))
            {
                <input type="hidden" name="userid" value="@Model.currentUser.Id " />
                <input type="hidden" name="postedToID" value="@Model.profileOwner.Id" />
                foreach (Hobby h in Model.profileOwnerHobbies)
                {
                    <span class="hobby-check"><input type="checkbox" name="@h.Name" class="hobbyCheckboxes" value="@h.Name" />@h.Name</span>
                }
                <div class="form-horizontal">
                    <label class="sr-only" for="statusText">Status</label>
                    <textarea class="form-control" rows="4" id="statusText" name="statusText" placeholder="Insert a status..."></textarea>
                    <span class="appendTo"></span>
                    <button type="submit" class="btn btn-primary">Post</button>
                </div>

                @Html.ValidationSummary(false)
            }
            <button class="onClick">Upload image</button>
        </section>

        @using ProbbySocialNetwork.Models
        <section id="statusList">
            @foreach (Status s in Model.profileOwnerStatusHistory)
            {
                <div class="status">
                    <div class="lhsStatus">
                        <div class="karmaContent">
                            @using (Html.BeginForm("UpvoteStatus", "Status", FormMethod.Post, new { id = s.ID }))
                            {
                                <input type="hidden" name="statusId" value="@s.ID" />
                                <button type="submit" class="glyphicon glyphicon-chevron-up upvote arrow"></button>
                            }

                            @if (s.Karma >= 0)
                            {
                                <p class="karmaCount">@s.Karma</p>
                            }
                            else
                            {
                                <p class="karmaCount">0</p>
                            }

                            @using (Html.BeginForm("DownvoteStatus", "Status", FormMethod.Post, new { id = s.ID }))
                            {
                                <input type="hidden" name="statusId" value="@s.ID" />
                                <button type="submit" class="glyphicon glyphicon-chevron-down downvote arrow"></button>
                            }
                        </div>
                        <div class="lhsContent">
                            <p>
                                <img src="@s.ProfilePic" class="postPic" />
                            </p>
                            <p class="postUserName"><a href="/Home/Profile?username=@s.UserName">@s.UserName</a></p>

                            @{ //404 ERROR: No better way to do this found
                            ServiceSingleton serviceManager = ServiceSingleton.GetInstance;
                            HobbyService service = ServiceSingleton.GetHobbyService;
                            List<Hobby> statusHobbies = service.getHobbiesByStatus(s);

                            foreach (Hobby h in statusHobbies)
                            {
                                @Html.ActionLink("#" + h.Name + " ", "Index", "Hobby", routeValues: h, htmlAttributes: new { id = h.ID });
                            }
                            }
                        </div>

                    </div>
                    <span class="rhsStatus">
                        <div class="allStatus">
                            <div class="statusContent">
                                <h3 id="@("statusText"+s.ID)" class="statusContent2">@s.Post</h3>
                                @using (Html.BeginForm("EditStatus", "Status", FormMethod.Post, new { id = s.ID }))
                                {
                                    <input type="hidden" name="statusId" value="@s.ID" />
                                    <div id="@("statusTextForm"+s.ID)" class="editForm">
                                        <label for="@("statusTextbox"+s.ID)">Status:</label>
                                        <input type="text" name="@("statusTextbox"+s.ID)" value="@s.Post" />
                                        <br />
                                        @if (s.MediaURL != null)
                                        {
                                            <label for="@("picTextbox"+s.ID)">Picture:</label>
                                            <input type="text" name="@("picTextbox"+s.ID)" value="@s.MediaURL" />
                                            <br />
                                        }
                                        <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                        <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                    </div>
                                }
                                @if (s.MediaURL != null)
                                {
                                    <img src="@s.MediaURL" alt="image" class="statusContent2" id="@("statusPic"+s.ID)" />
                                }
                            </div>
                            <p>
                                @s.Date
                                @if (Model.currentUser.Id == s.UserID)
                                {
                                    <span> | </span>
                                    <a class="editLink" onclick="editStatus(@s.ID)">Edit</a>
                                    <span> | </span>
                                    @Html.ActionLink("Remove", "RemoveStatus", "Status", new { id = s.ID }, null)

                                }
                                <span> | </span>
                                @Html.ActionLink("Save", "AddStatusToSavedFeed", "Home", new { id = s.ID }, null)
                            </p>
                        </div>
                            @if (Model.commentsForStatuses != null)
                            {
                                <div class="allComments" id='@("commentForStatus"+s.ID)'>
                                    @foreach (Comment c in Model.commentsForStatuses)
                                    {
                                        if (c.StatusID == s.ID)
                                        {
                                            <div class="comment">
                                                <h5 id="@(" commenttext"+c.ID)" class="commentContent2">@c.Body</h5>
                                                @using (Html.BeginForm("EditComment", "Status", FormMethod.Post, new { id = c.ID }))
                                                {
                                                    <input type="hidden" name="commentId" value="@c.ID" />
                                                    <div id="@("commenttextform"+c.ID)" class="editForm">
                                                        <label for="@(" commenttextbox"+c.ID)">Comment:</label>
                                                        <br />
                                                        <input type="text" name="@(" commenttextbox"+c.ID)" value="@c.Body" />
                                                        <br />
                                                        <button type="submit" name="confirm" value="confirm" class="btn btn-primary">Confirm Edit</button>
                                                        <button type="submit" name="cancel" value="cancel" class="btn btn-primary">Cancel</button>
                                                    </div>
                                                }
                                                <a href="/Home/Profile?username=@c.UserName">@c.UserName</a> | @c.DateInserted
                                                @if (Model.currentUser.Id == c.UserID || Model.currentUser.Id == s.UserID)
                                                {
                                                    <span> | </span>
                                                    <a class="editLink" onclick="editComment(@c.ID)">Edit</a>
                                                    <span> | </span>
                                                    @Html.ActionLink("Remove", "RemoveComment", "Status", new { id = c.ID }, null)
                                                }
                                            </div>
                                        }
                                    }
                                </div>
                            }
                            @using (Html.BeginForm("CreateComment", "Status", FormMethod.Post, new { id = "commentForm" }))
                            {
                                <input type="hidden" name="statusID" value="@s.ID" />
                                <div class="form-horizontal">
                                    <label class="sr-only" for="commentText">Status</label>
                                    <input type="text" class="form-control commentTextbox" id="commentInputBox" name="commentText" placeholder="Write a comment..." />
                                </div>
                                @Html.ValidationSummary(false)
                            }
                    </span>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
